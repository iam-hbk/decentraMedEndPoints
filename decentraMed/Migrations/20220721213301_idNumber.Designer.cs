// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using decentraMed.Models;

#nullable disable

namespace decentraMed.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220721213301_idNumber")]
    partial class idNumber
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("decentraMed.Models.Allergies", b =>
                {
                    b.Property<string>("AllergyId")
                        .HasColumnType("text");

                    b.Property<string>("AllergyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AllergyId");

                    b.ToTable("Allergies");
                });

            modelBuilder.Entity("decentraMed.Models.Diagnosis", b =>
                {
                    b.Property<string>("DiagnosisId")
                        .HasColumnType("text");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Findings")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DiagnosisId");

                    b.ToTable("Diagnosis");
                });

            modelBuilder.Entity("decentraMed.Models.DoctorInfo", b =>
                {
                    b.Property<string>("InfoId")
                        .HasColumnType("text");

                    b.Property<string>("Doctor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("InfoId");

                    b.ToTable("DoctorInfo");
                });

            modelBuilder.Entity("decentraMed.Models.User", b =>
                {
                    b.Property<string>("uid")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BloodType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DoB")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("idNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("uid");

                    b.ToTable("User");
                });

            modelBuilder.Entity("decentraMed.Models.UserTokens", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("Token")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("userTokens");
                });

            modelBuilder.Entity("decentraMed.Models.Vaccination", b =>
                {
                    b.Property<string>("VaccinationId")
                        .HasColumnType("text");

                    b.Property<string>("AttendingPhysician")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VaccinationDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VaccinationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("VaccinationId");

                    b.ToTable("Vaccination");
                });
#pragma warning restore 612, 618
        }
    }
}
